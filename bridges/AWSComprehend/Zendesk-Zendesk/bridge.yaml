# This is an EXAMPLE deployment. To utilize this file; replace all of the values noted '#EXAMPLE' with valid data. 
apiVersion: v1
kind: Secret
metadata:
  name: awscomp
type: Opaque
stringData:
   accesskey: XKIAOF3XXCNCA4ZKVZ6A #EXAMPLE
   secretkey: XTNmxPaEV9yrC732kAhCEhjUawVVMQ51xUPIFJiO #EXAMPLE
---
apiVersion: v1
kind: Secret
metadata:
  name: zendesktargetsecret
type: Opaque
stringData:
   token: 'tHpUJ2ieiXsxEvBotczR99EwpETeQOiUU07KovBJ' #EXAMPLE 
  
---
apiVersion: v1
kind: Secret
metadata:
  name: zendesksource
type: Opaque
stringData:
  token: 'tHpUJ2ieiXsxEvBotczR99EwpETeQOiUU07KovBJ' #EXAMPLE 
  password: pass

---
apiVersion: flow.triggermesh.io/v1alpha1
kind: Bridge
metadata:
  annotations:
    bridges.triggermesh.io/name: zendesk-comprehiend-zendesk
  name: zendesk-comprehiend-zendesk
spec:
  components:
    - object:
        apiVersion: eventing.knative.dev/v1beta1
        kind: Broker
        metadata:
          name: broker-zendesk
    - object:
        apiVersion: eventing.knative.dev/v1beta1
        kind: Broker
        metadata:
          name: transform-zendesk   
    - object:
        apiVersion: sources.triggermesh.io/v1alpha1
        kind: ZendeskSource
        metadata:
          name: zendesksource
        spec:
          email: '<ZENDESK ACCOUNT USER EMAIL>'
          subdomain: '<ZENDESK TENANT SUBDOMAIN>'
          token:
            secretKeyRef:
              name: zendesksource
              key: token
          webhookUsername: '<SOME ARBITRARY USERNAME>'
          webhookPassword:
            secretKeyRef:
              name: zendesksource
              key: password          
          sink:
            ref:
              apiVersion: eventing.knative.dev/v1beta1
              kind: Broker
              name: broker-zendesk
    - object:
        apiVersion: serving.knative.dev/v1
        kind: Service
        metadata:
          name: zendesk-comprehiend
        spec:
          template:
            spec:
              containers:
              - image: gcr.io/neffdev/zenformation:latest
                env:
                  - name: AWS_ACCESS_KEY_ID
                    valueFrom: 
                      secretKeyRef:
                        name: awscomp
                        key: accesskey
                  - name: AWS_SECRET_ACCESS_KEY
                    valueFrom: 
                      secretKeyRef:
                        name: awscomp
                        key: secretkey
                  - name: LANGUAGE
                    value: 'en' #Example 
                  - name: AWS_REGION
                    value: 'us-east-1' #Example 
    - object:
        apiVersion: messaging.knative.dev/v1beta1
        kind: Subscription
        metadata:
          name: subscription-zendesk
        spec:
          channel:
            apiVersion: messaging.knative.dev/v1beta1
            kind: InMemoryChannel
            name: broker-zendesk-kne-trigger
          subscriber:
            ref:
              apiVersion: serving.knative.dev/v1
              kind: Service
              name: zendesk-comprehiend
          reply:
            ref:
              apiVersion: eventing.knative.dev/v1beta1
              kind: Broker
              name: transform-zendesk
    - object:
         apiVersion: targets.triggermesh.io/v1alpha1
         kind: ZendeskTarget
         metadata:
          name: triggermesh-zendesk
         spec:
           subject: <SOME ARBITRARY SUBJECT>'
           subdomain: '<ZENDESK TENANT SUBDOMAIN>'
           email: '<ZENDESK ACCOUNT USER EMAIL>'
           token:
            secretKeyRef:
              name: zendesktargetsecret
              key: token
    - object:
        apiVersion: eventing.knative.dev/v1beta1
        kind: Trigger
        metadata:
          name: zendesk-trigger
        spec:
          broker: transform-zendesk
          subscriber:
            ref:
              apiVersion: targets.triggermesh.io/v1alpha1
              kind: ZendeskTarget
              name: triggermesh-zendesk
